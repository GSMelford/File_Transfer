<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="СontextMenuTable.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADBibYAwYm2AMGJtgDBibYAwYm2K8GJtpDBibbYwIa0+r6Ds/+9gbL/vYCx/7x/
        sP+8f7D/vH+w/7x/sP+8f7D/vH+w/7x/sP+8f7D/vYCx/72Bsv++g7P/wIa09MGJttTBibaQwYm2LMGJ
        tgDBibYAwYm2AMGJtgAAAAAAAAAAAMGJtgDBibYAwYm2BsGJtpTBiLb9vYGx/7p7rf+3d6v/tnSp/7Vy
        qP+0caf/tHGn/7Rwp/+0cKf/tHCn/7Rwp/+0cKf/tHCn/7Rxp/+0caf/tXKo/7Z0qf+3d6v/unut/72B
        sf/BiLb9wYm2mMGJtgnBibYAwYm2AAAAAAAAAAAAwoq3AMKKtwbCire7v4W0/7p8rv+2dKn/s26m/7Fq
        o/+wZ6H/r2ah/69loP+vZaD/rmSg/65koP+uZKD/rmSg/65koP+uZKD/r2Wg/69loP+vZqH/sGeh/7Fq
        o/+zbqb/tnSp/7p8rv+/hbT/woq3vcKKtwbCircAAAAAAAAAAADCircAwoq3lb+GtP+5eq3/tHGn/7Bp
        ov+tY57/q2Cc/6pem/+pXJr/qVua/6lbmv+pW5r/qVua/6lbmv+pW5r/qVua/6lbmv+pW5r/qVua/6lc
        mv+qXpv/q2Cc/61jnv+waaL/tHGn/7l6rf+/hrT/woq3lcKKtwAAAAAAAAAAAMKLtyzBirb8un2u/7Rx
        p/+vaKH/q2Gc/6hbmf+nWJf/plaW/6VVlf+lVZX/pVWV/6VVlf+lVZX/pVWV/6VVlf+lVZX/pVWV/6VV
        lf+lVZX/pVWV/6ZWlv+nWJf/qFuZ/6thnP+vaKH/tHGn/7p9rv/Birb8wou3LAAAAAAAAAAAwoy3j76D
        sv+3dqr/sWqj/6xhnf+oWpj/plWV/6VTlP+kUZP/pFGT/6NRk/+jUZP/o1CS/6NQkv+jUJL/o1CS/6NQ
        kv+jUJL/o1GT/6NRk/+kUZP/pFGT/6VTlP+mVZX/qFqY/6xhnf+xaqP/t3aq/76Dsv/CjLeQAAAAAAAA
        AADCjLjXu3+v/7Ryp/+uZqD/qV2b/6ZWlv/audX/8uDx/8qdwv+iT5L/ok+S/6JPkv+iT5L/ok+S/6JP
        kv+iT5L/ok+S/6JPkv+iT5L/tHSo/97A2v/y4PH/8uDx/9/B2/+mVpb/qV2b/65moP+0cqf/u3+v/8KM
        uNQAAAAAAAAAAMKLtvm6fK3/s2+l/61knv+pXJn/plaV/9q51f/y4PH/yp7C/6NRkv+jUZL/o1GS/6NR
        kv+jUZL/o1GS/6NRkv+jUZL/o1GS/6NRkv/o0eb/8uDx//Lg8f/y4PH/7djr/6ZWlf+pXJn/rWSe/7Nv
        pf+6fK3/wou28wAAAAAAAAAAwIm1/7h6rP+xbaT/rGOe/6hbmf+lVZX/2rnV//Lg8f/KnsL/o1KT/6NS
        k/+jUpP/o1KT/6NSk/+jUpP/o1KT/6NSk/+jUpP/wIu2//Lg8f/t2Ov/tHao/6NSk/+jU5P/pVWV/6hb
        mf+sY57/sW2k/7h6rP/AibX/AAAAAAAAAADAiLT/uHmr/7Jto/+sY53/qFuY/6ZWlf/audX/8uDx/8uf
        wv+kU5P/pFOT/6RTk/+kU5P/pFOT/6RTk/+kU5P/pFOT/6RTk//Ln8L/8uDx/9/B2v+kU5P/pFOT/6RT
        k/+mVpX/qFuY/6xjnf+ybaP/uHmr/8CItP8AAAAAAAAAAL+ItP+4eqv/sW6k/6xknf+oXZn/pViW/9q5
        1f/y4PH/y5/D/6RVlP+kVZT/pFWU/6RVlP+kVZT/pFWU/6RVlP+kVZT/pFWU/8ufw//y4PH/2rnV/6RV
        lP+kVZT/pFWU/6VYlv+oXZn/rGSd/7FupP+4eqv/v4i0/wAAAAAAAAAAwIi1/7h6rP+yb6T/rWWe/6ld
        mv+mWZf/2rnV//Lg8f/LoMP/pVaV/6VWlf+lVpX/pVaV/6VWlf+lVpX/pVaV/6VWlf+lVpX/y6DD//Lg
        8f/audX/pVaV/6VWlf+lVpX/plmX/6ldmv+tZZ7/sm+k/7h6rP/AiLX/AAAAAAAAAADAirX/uHus/7Jw
        pf+tZp//qV+b/6Zal//autX/8uDx/8ugxP+lWJb/pViW/6VYlv+lWJb/pViW/6VYlv+lWJb/pViW/6VY
        lv/LoMT/8uDx/9q61f+lWJb/pViW/6VYlv+mWpf/qV+b/61mn/+ycKX/uHus/8CKtf8AAAAAAAAAAMCK
        tf+4fKz/snCl/61nn/+pYJv/pluX/9q61f/y4PH/y6HE/6VZlv+lWZb/pVmW/6VZlv+lWZb/pVmW/6VZ
        lv+lWZb/pVmW/8uhxP/y4PH/2rrV/6VZlv+lWZb/pVmW/6Zbl/+pYJv/rWef/7Jwpf+4fKz/wIq1/wAA
        AAAAAAAAwYy2/7l+rf+zcqb/rmmg/6pim/+nXZj/27rW//Lg8f/y4PH/8uDx//Lg8f/y4PH/8uDx//Lg
        8f/kyuH/pluX/6Zbl/+mW5f/zKLE//Lg8f/butb/pluX/6Zbl/+mW5f/p12Y/6pim/+uaaD/s3Km/7l+
        rf/BjLb/AAAAAAAAAADBjbf/uX+u/7N0p/+ua6H/qmSc/6dfmf/bu9b/8uDx//Lg8f/y4PH/8uDx//Lg
        8f/y4PH/8uDx/+TK4f+mXZj/pl2Y/6ZdmP/MosX/8uDx/9u71v+mXZj/pl2Y/6ZdmP+nX5n/qmSc/65r
        of+zdKf/uX+u/8GNt/8AAAAAAAAAAMGOt/+6gK7/s3Wn/69sof+rZZz/qGCZ/9u71v/y4PH/zKPF/6de
        mP+nXpj/p16Y/6demP+nXpj/p16Y/6demP+nXpj/p16Y/8yjxf/y4PH/27vW/6demP+nXpj/p16Y/6hg
        mf+rZZz/r2yh/7N1p/+6gK7/wY63/wAAAAAAAAAAwY+3/7qCr/+zdqf/r26i/6tnnf+oYpr/27zW//Lg
        8f/Mo8X/p2CZ/6dgmf+nYJn/p2CZ/6dgmf+nYJn/p2CZ/9Gsy//y4PH/8uDx//Lg8f/y4PH/8uDx//Lg
        8f/t2ez/qGKa/6tnnf+vbqL/s3an/7qCr//Bj7f/AAAAAAAAAADCkLj/u4Ow/7V4qf+wb6P/rGie/6lj
        nP/bvNb/8uDx/82kxv+oYZr/qGGa/6hhmv+oYZr/qGGa/6hhmv+oYZr/0azL//Lg8f/y4PH/8uDx//Lg
        8f/y4PH/8uDx/+7Z7P+pY5z/rGie/7Bvo/+1eKn/u4Ow/8KQuP8AAAAAAAAAAMKSuP+7hbD/tXqp/7Bw
        o/+sap//qWWc/9u81v/y4PH/zaXG/6hjmv+oY5r/qGOa/6hjmv+oY5r/qGOa/6hjmv+oY5r/qGOa/82l
        xv/y4PH/27zW/6hjmv+oY5r/qGOa/6llnP+sap//sHCj/7V6qf+7hbD/wpK4/wAAAAAAAAAAxJS6/7yH
        sf+2e6r/sXKk/61roP+rZ53/27zX//Lg8f/Npcb/qWSb/6lkm/+pZJv/qWSb/6lkm/+pZJv/qWSb/6lk
        m/+pZJv/zaXG//Lg8f/bvNf/qWSb/6lkm/+pZJv/q2ed/61roP+xcqT/tnuq/7yHsf/ElLr/AAAAAAAA
        AADEl7v/vYmz/7Z+rP+xdab/rW6h/6tpnv/bvdf/8uDx/82mxv+pZpz/qWac/6lmnP+pZpz/qWac/6lm
        nP+pZpz/qWac/6lmnP/Npsb/8uDx/9u91/+pZpz/qWac/6lnnP+raZ7/rW6h/7F1pv+2fqz/vYmz/8SX
        u/8AAAAAAAAAAMaavfm/jbT/uYGt/7N4p/+vcaL/rGuf/9y91//y4PH/8uDx//Lg8f/y4PH/8uDx//Lg
        8f/y4PH/8uDx/7qEr/+qZ5z/qmec/7qEr//Srsz/3L3X/6pnnP+qaJz/q2id/6xrn/+vcaL/s3in/7mB
        rf+/jbT/xpq9+QAAAAAAAAAAyJ2/18GRuP+7hrD/tXyq/7F0pf+tbqH/3L7Y//Lg8f/y4PH/8uDx//Lg
        8f/y4PH/8uDx//Lg8f/y4PH/uoWw/6ponf+qaJ3/qmid/6ponf+qaJ3/qmmd/6tpnv+sa5//rW6h/7F0
        pf+1fKr/u4aw/8GRuP/Inb/XAAAAAAAAAADIncCPxJa7/76LtP+5ga7/tHmp/7FzpP+ub6L/rW2h/61s
        oP+tbKD/rGug/6xroP+sa5//rGuf/6xrn/+sa5//rGuf/6xrn/+sa6D/rGug/61soP+tbKD/rW2h/65v
        ov+xc6T/tHmp/7mBrv++i7T/xJa7/8idwI8AAAAAAAAAAMifwCvInr/8wpO4/7yJsv+4gq3/tHup/7J3
        pv+wdKT/r3Oj/69yo/+vcqP/r3Gi/69xov+vcaL/r3Gi/69xov+vcaL/r3Gi/69xov+vcqP/r3Kj/69z
        o/+wdKT/snem/7R7qf+4gaz/vImy/8KTuP/Inr/8yJ/AKwAAAAAAAAAAyJ/AAMifwJXGm73/wZK3/7yK
        sv+5hK7/tn+r/7R8qf+zeqj/s3mn/7J5pv+yeab/snmm/7J5pv+yeab/snmm/7J5pv+yeab/snmm/7J5
        pv+zeaf/s3qo/7R8qf+2f6v/uYSu/7yKsv/Bkrf/xpu9/8ifwJTIn8AAAAAAAAAAAADJn8EAyZ/BBsmf
        wbvHm77/wpS5/7+Ntf+8ibL/uoWw/7mDrv+4gq3/uIGt/7iBrf+4ga3/uIGt/7iBrf+4ga3/uIGt/7iB
        rf+4ga3/uIGt/7iCrf+5g67/uoWw/7yJsv+/jbX/wpS5/8ebvv/Jn8G9yZ/BBsmfwQAAAAAAAAAAAMmg
        wQDJoMEAyaDBBsmgwZTJn8D9xZm8/8KVuf/Bkbf/v4+1/7+OtP++jLT/voy0/76Ms/++jLP/voyz/76M
        s/++jLP/voyz/76MtP++jLT/v460/7+Ptf/Bkbf/wpW5/8WZvP/Jn8D9yaDBmMmgwQnJoMEAyaDBAAAA
        AAAAAAAAyaHBAMmhwQDJocEAyaHBAMmhwSrJocGOyaHB18iewPjGnL7/xpu9/8Wavf/Fmbz/xZm8/8WZ
        vP/Fmbz/xZm8/8WZvP/Fmbz/xZm8/8Wavf/Gm73/xpy+/8iewPjJocHWyaHBjsmhwSrJocEAyaHBAMmh
        wQDJocEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////gAAB/gAAAHwAAAA8AAAAOAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABwAAAA8AAAAPgAAAH+AAAH/////8=
</value>
  </data>
</root>